<?php
    $templateData = loadData();
    $ow = OntoWiki::getInstance();
    $erfurt = $ow->erfurt;
    $store = $erfurt->getStore();
    $user = $ow->getUser();
    $baseUri = $GLOBALS["cBaseUri"];
    
    $GLOBALS["IAmBusiness"] = true;
    
    $basePath = $GLOBALS["cBasePath"];
    require_once("$basePath/lib/edit.lib.php");
    
    //= PROCESS ================================================================
    $post = $_POST;
    if ($post && isset($_GET["new"]) && $_GET["new"] == "new")
    {
        $psuri = getPrivateSpace($ow);
        if ($psuri === false) throw new OntoWiki_Exception("User has no private space.");
        $model = $store->getModel($psuri[0]);
        $newentityprefix = $templateData["resource"];
        $username = $user->getUsername();
        $userprefix = $templateData["user"];
        $usruri = $userprefix.$username;
        
        $dctp = $model->getNamespacePrefix('http://purl.org/dc/terms/');
        $xsdp = $model->getNamespacePrefix('http://www.w3.org/2001/XMLSchema#');
        
        $usergroups = getContractUseroups($ow);
        
        if (isset($_POST["gr:legalName0"]) && $usergroups["any"]) //TODO: kontrola vsech atributu??
        {
            if (!$model->isEditable()) {
                printMessage("Can't write into personal model.",OntoWiki_Message::ERROR);
            } else {
                $name = trim($_POST["gr:legalName0"]);
                $tid = trim($_POST["br:officialNumber0"]);
                $countryname = trim($_POST["vcard:country-name0"]);
                $locality = trim($_POST["vcard:locality0"]);
                $postalcode = trim($_POST["vcard:postal-code0"]);
                $street = trim($_POST["vcard:street0"]);
                
                if (strlen($tid) > 4) { //TODO: jake univerzalni pravidlo pro platny kod?
                    $resuriend = strtoupper($countryname).strtolower($tid);
                    $resuriend = str_replace(' ','-',$resuriend); //TODO: bezpecnejsi prevod na URL slug
                } else
                    $resuriend = generateGuid();
                $resname = $newentityprefix."business-entity/".$resuriend;
                $vcard = $resname . '/vcard-class/1';
                $vcard_adr = $vcard . '/vcard-address-class/1';
                $vcard_org = $vcard . '/vcard-organization-class/1';
                $stmtArray = array(
                    $resname => array(
                        EF_RDF_TYPE => array(array(
                            'type'  => 'uri',
                            'value' => 'http://purl.org/goodrelations/v1#BusinessEntity' 
                        )),
                        'http://purl.org/goodrelations/v1#legalName' => array(array(
                            'type'  => 'literal',
                            'value' => $name
                        )),
                        'http://purl.org/business-register#officialNumber' => array(array(
                            'type'  => 'literal',
                            'value' => $tid
                        )),
                        'http://purl.org/business-register#contact' => array(array(
                            'type'  => 'uri', //bnode
                            'value' => $vcard
                        )),
                        'http://purl.org/dc/terms/creator' => array(array( //id toho kdo vytvoril BE
                            'type'  => 'uri',
                            'value' => $usruri
                        )),
                        'http://purl.org/dc/terms/created' => array(array( //datum vytvoreni BE
                            'type'  => 'literal', 'datatype' => $xsdp.':date',
                            'value' => Date("Y-m-d")
                        ))
                    ),
                    $vcard => array(
                        EF_RDF_TYPE => array(array(
                            'type'  => 'uri',
                            'value' => 'http://www.w3.org/2006/vcard/ns#VCard' 
                        )),
                        'http://www.w3.org/2006/vcard/ns#adr' => array(array(
                            'type'  => 'uri', //bnode
                            'value' => $vcard_adr
                        )),
                        'http://www.w3.org/2006/vcard/ns#org' => array(array(
                            'type'  => 'uri', //bnode
                            'value' => $vcard_org
                        ))
                    ),
                    $vcard_org => array(
                        EF_RDF_TYPE => array(array(
                            'type'  => 'uri',
                            'value' => 'http://www.w3.org/2006/vcard/ns#Organization' 
                        )),
                        'http://www.w3.org/2006/vcard/ns#organization-name' => array(array(
                            'type'  => 'literal',
                            'value' => $name
                        ))
                    ),
                    $vcard_adr => array(
                        EF_RDF_TYPE => array(array(
                            'type'  => 'uri',
                            'value' => 'http://www.w3.org/2006/vcard/ns#Address' 
                        )),
                        'http://www.w3.org/2006/vcard/ns#country-name' => array(array(
                            'type'  => 'literal',
                            'value' => $countryname
                        )),
                        'http://www.w3.org/2006/vcard/ns#locality' => array(array(
                            'type'  => 'literal',
                            'value' => $locality
                        )),
                        'http://www.w3.org/2006/vcard/ns#postal-code' => array(array(
                            'type'  => 'literal',
                            'value' => $postalcode
                        )),
                        'http://www.w3.org/2006/vcard/ns#street' => array(array(
                            'type'  => 'literal',
                            'value' => $street
                        ))
                    )
                );
                
                /*print_r($stmtArray);
                Die();*/
                
                $store->addMultipleStatements($model->getModelIri(), $stmtArray, true);
                $cache = $erfurt->getQueryCache();
                $cache->invalidateWithModelIri($model->getModelIri());
                
                //when creating business entity describing himself
                if (isset($_GET["self"]) && ($_GET["self"] == "true") && (getUserBusiness($ow) === false)) {
                    $configModel = $store->getModel('http://localhost/OntoWiki/Config/',false);
                    $user = $ow->getUser();
                    $username = $user->getUsername();
                    $useruri = 'http://localhost/OntoWiki/Config/'.$username; //je spolehlive? TODO: najit lepsi zpusob zjisteni uri uzivatele
                    //add information about business entity to user profile
                    $predicate = $templateData["configns"].$templateData["configownbusinesspredicate"];
                    $store->addStatement($configModel->getModelIri(),
                        $useruri,
                        $predicate,
                        array('value' => $resname, 'type'  => 'uri'),
                        false);
                    printMessage("Business entity describing yourself created.",OntoWiki_Message::INFO);
                }
                printMessage("Business entity created.",OntoWiki_Message::SUCCESS);
            }
        } else {
            printMessage("Wrong user groups.",OntoWiki_Message::ERROR);
        }
    }
    
    //= EDIT ===================================================================
    $req = $_REQUEST;
    if ($req["page"] == "businessentity" ||
        $req["page"] == "publishbusinessentity" ||
        $req["page"] == "business_edit" )
    {
        if (!isset($req["uri"]))
            Die();
        $beuri = urldecode($req["uri"]);
        $new = false;
        $submittext = "Save changes";
        //models
        $publicmodel = new Erfurt_Rdf_Model($templateData["publicspace"]);
        $privatemodel = false;
        $inPrivate = false;
        if (!$user->isAnonymousUser()) {
            $privatespace = getPrivateSpace($ow);
            if ($privatespace !== false)
                $privatemodel = new Erfurt_Rdf_Model($privatespace[0]);
            
        }
        //load from both models
        //$resmod = new OntoWiki_Model_Resource($store,$publicmodel,$beuri);
        //$resmod->getValues(); //getPredicates();
        //$publicresource = $publicmodel->getResource($beuri);
        $checkQuery = 'SELECT ?t WHERE {<'.$beuri.'> <'.EF_RDF_TYPE.'> ?t}';
        //$query = 'DESCRIBE <'.$beuri.'>';
        $inPublic = $publicmodel->sparqlQuery($checkQuery);
        $inPublic = ( $inPublic == array() ? false : true);
        if ($privatemodel !== false) {
            $inPrivate = $privatemodel->sparqlQuery($checkQuery);
            $inPrivate = ( $inPrivate == array() ? false : true);
        }
        $canEdit = (!$user->isAnonymousUser()) && $inPrivate;
        //address uri
        $addressQuery = 'SELECT ?a WHERE {
            <'.$beuri.'> <'.$GLOBALS["ns_var"]["br"].'contact> ?c .
            ?c <'.$GLOBALS["ns_var"]["vcard"].'adr> ?a .
            }';
        $addressuri = $publicmodel->sparqlQuery($addressQuery);
        if ($addressuri === array() && $privatemodel !== false) {
            $addressuri = $privatemodel->sparqlQuery($addressQuery);
        }
        $addressuri = $addressuri[0]["a"];
        //business entity values
        $publicresource = new OntoWiki_Model_Resource($store,$publicmodel,$beuri);
        $publicvalues = $publicresource->getValues();
        if (isset($publicvalues[$publicmodel->getModelIri()]))
            $publicvalues = $publicvalues[$publicmodel->getModelIri()];
        $privatevalues = array();
        if ($privatemodel !== false) {
            $privateresource = new OntoWiki_Model_Resource($store,$privatemodel,$beuri);
            $privatevalues = $privateresource->getValues();
            if (isset($privatevalues[$privatemodel->getModelIri()]))
                $privatevalues = $privatevalues[$privatemodel->getModelIri()];
        }
        //address values
        $publicresourceAddress = new OntoWiki_Model_Resource($store,$publicmodel,$addressuri);
        $publicvaluesAddress = $publicresourceAddress->getValues();
        if (isset($publicvaluesAddress[$publicmodel->getModelIri()]))
            $publicvaluesAddress = $publicvaluesAddress[$publicmodel->getModelIri()];
        $privatevaluesAddress = array();
        if ($privatemodel !== false) {
            $privateresourceAddress =  new OntoWiki_Model_Resource($store,$privatemodel,$addressuri);
            $privatevaluesAddress = $privateresourceAddress->getValues();
            if (isset($privatevaluesAddress[$privatemodel->getModelIri()]))
                $privatevaluesAddress = $privatevaluesAddress[$privatemodel->getModelIri()];
        }
        
        //print_r($privatevaluesAddress);

        //$privatepredicates = $privateresource->getPredicates();
        //print_r($privatepredicates);
        //print_r($privatevalues);
        /*
        $dataQuery = "SELECT ?title ?officialNumber WHERE {
            <$beuri> <{$GLOBALS["ns_var"]["gr"]}legalName> ?title.
            <$beuri> <{$GLOBALS["ns_var"]["br"]}officialNumber> ?officialNumber .
            }";
        $publicData = $publicmodel->sparqlQuery($dataQuery);
        $privateData = array();
        if ($privatemodel !== false)
            $privateData = $privatemodel->sparqlQuery($dataQuery);
        print_r($privateData);
        */
?>
<h2>Business entity</h2>
<p><small><em><?php echo $beuri; ?></em></small></p>
<div class="resourcein">
<?php if ($inPrivate) { ?>
<img src="<?php echo $baseUri; ?>/img/privatespace.png" alt="in private data space" title="in private data space" />
in private data space
&nbsp;&nbsp;&nbsp;&nbsp;
<?php } if ($inPublic) { ?>
<img src="<?php echo $baseUri; ?>/img/publicspace.png" alt="in public data space" title="in public data space" />
in public data space
<?php } ?>
</div>
<div id="form_container">
    <form id="form_472917" class="appnitro"  name="businessedit" action="?page=business_edit&amp;uri=<?php echo urlencode($beuri); ?>" method="post">
<?php
    }
    //= CREATE =================================================================
    else if ($req["page"] == "newbusinessentity")
    {
        $new = true;
        $canEdit = true;
        $submittext = "Create";
        $privatevalues = array();
        $publicvalues = array();
        $privatevaluesAddress = array();
        $publicvaluesAddress = array();
        echo "<h2>New business entity</h2>";
        echo '<div id="form_container">';
        if (isset($_GET["self"]) && $_GET["self"]=="true")
            $self = "&amp;self=true"; else $self = "";
        echo '<form id="form_472917" class="appnitro" name="businessedit" action="?page=businessentity&amp;new=new',$self,'" method="post">';
    }
    
    //= WRITE ==================================================================
    //$odd = false;
    //= FORM =
?>
		<ul >
					<li id="li_1" >
		<label class="description" for="gr:legalName">Legal name </label>
		<div>
            <?php printInputBox2($privatevalues,$publicvalues,"gr:legalName",0,$canEdit,$new,"large"); ?>
		</div><p class="guidelines" id="guide_1"><small>The legal name of the gr:BusinessEntity.</small></p> 
		</li>		<li id="li_2" >
		<label class="description" for="br:officialNumber">Official number </label>
		<div>
            <?php printInputBox2($privatevalues,$publicvalues,"br:officialNumber",0,$canEdit,$new,"medium"); ?>
		</div><p class="guidelines" id="guide_2"><small>Official identification number.</small></p> 
		</li>		<li id="li_3" >
		<label class="description" for="element_3">Contact </label>
		
		<div>
            <?php printInputBox2($privatevaluesAddress,$publicvaluesAddress,"vcard:street",0,$canEdit,$new,"large"); ?>
			<label for="vcard:street">Street Address</label>
		</div>
	
		<div>
            <?php printInputBox2($privatevaluesAddress,$publicvaluesAddress,"vcard:locality",0,$canEdit,$new,"large"); ?>
			<label for="vcard:locality">City</label>
		</div>
	
		<div> 
            <?php printInputBox2($privatevaluesAddress,$publicvaluesAddress,"vcard:postal-code",0,$canEdit,$new,"small",' maxlength="15"'); ?>
			<label for="vcard:postal-code">Postal / Zip Code</label>
		</div>
	
		<div>
            <?php printSelectCountry2($privatevaluesAddress,$publicvaluesAddress,"vcard:country-name",0,$canEdit,$new,"large"); ?>
		<label for="vcard:country-name">Country</label>
	</div><p class="guidelines" id="guide_3"><small>Organization contact.</small></p> 
		</li>

<?php   //= METADATA =
    if ($req["page"] != "newbusinessentity") { ?>
        <li class="section_break">
			<h3>Metadata</h3>
			<p></p>
		</li>		<li id="li_5" >
		<label class="description" for="rdf:type">Type </label>
		<div>
            <?php printInputBox2($privatevalues,$publicvalues,"rdf:type",0,false,$new,"large"); ?>
		</div><p class="guidelines" id="guide_5"><small>rdf:type</small></p> 
		</li>		<li id="li_6" >
		<label class="description" for="dct:creator">Creator </label>
		<div>
            <?php printInputBox2($privatevalues,$publicvalues,"dct:creator",0,false,$new,"large"); ?>
		</div><p class="guidelines" id="guide_6"><small>dct:creator</small></p> 
		</li>		<li id="li_7" >
		<label class="description" for="dct:publisher">Publisher </label>
		<div>
            <?php printInputBox2($privatevalues,$publicvalues,"dct:publisher",0,false,$new,"large"); ?>
		</div><p class="guidelines" id="guide_7"><small>dct:publisher</small></p> 
		</li>		<li id="li_8" >
		<label class="description" for="dct:created">Date of creation </label>
		<?php printSelectDate2($privatevalues,$publicvalues,"dct:created",0,false,$new); ?>
		<p class="guidelines" id="guide_8"><small>dct:created</small></p> 
		</li>		<li id="li_9" >
		<label class="description" for="element_9">Date of publication </label>
		<?php printSelectDate2($privatevalues,$publicvalues,"pc:publicationDate",0,false,$new); ?>
		<p class="guidelines" id="guide_9"><small>pc:publicationDate</small></p> 
		</li>
<?php } ?>

<li class="buttons">
    <input type="hidden" name="form_id" value="472917" />
<?php if ($new || $inPrivate) { ?>
	<input id="saveForm" class="button_text button" type="submit" name="submit" value="<?php echo $submittext; ?>" />
<?php } ?>
		</li>
			</ul>
		</form>
    </div>

<?php 
