<?php
    $templateData = loadData();
    $ow = OntoWiki::getInstance();
    $erfurt = $ow->erfurt;
    $store = $erfurt->getStore();
    $user = $ow->getUser();
    $baseUri = $GLOBALS["cBaseUri"];
    
    $psuri = getPrivateSpace($ow);
    if ($psuri === false) throw new OntoWiki_Exception("User has no private space.");
    $model = $store->getModel($psuri[0]);
    $publicmodeluri = $templateData["publicspace"];
    $publicmodel = new Erfurt_Rdf_Model($publicmodeluri);
    //$resource = $this->_owApp->selectedResource;
    $req = $_REQUEST;
    if (!isset($req["uri"])) throw new OntoWiki_Exception("No resource selected.");
    $resourceuri = urldecode($req["uri"]);
    $resource = new OntoWiki_Resource($resourceuri,$model);
    $title = $resource->getTitle();
    //$translate   = $ow->translate;
    $username = $user->getUsername();
    $userprefix = $templateData["user"];
    $usruri = $userprefix.$username;
    //$rUriEncoded = urlencode((string)$resource);
    //$mUriEncoded = urlencode((string)$model);
    
    $xsdp = $model->getNamespacePrefix('http://www.w3.org/2001/XMLSchema#');
    
    //check if it doesnt exist
    $res = $publicmodel->sparqlQuery('SELECT ?x WHERE {<'.$resourceuri.'> ?z ?x}');
    if ($res !== array()) {
        //resource already exists
        printMessage("Repubishing business entity...",OntoWiki_Message::INFO);
    }
    
    $query[0] = 'SELECT ?s ?p ?o WHERE {
        <'.$resourceuri.'> ?p ?o. }';
    $query[1] = 'SELECT ?s ?p ?o WHERE {
        <'.$resourceuri.'> <http://purl.org/business-register#contact> ?s.
        ?s ?p ?o. }';
    $query[2] = 'SELECT ?s ?p ?o WHERE {
        <'.$resourceuri.'> <http://purl.org/business-register#contact> ?c.
        ?c <http://www.w3.org/2006/vcard/ns#org> ?s.
        ?s ?p ?o. }';
    $query[3] = 'SELECT ?s ?p ?o WHERE {
        <'.$resourceuri.'> <http://purl.org/business-register#contact> ?c.
        ?c <http://www.w3.org/2006/vcard/ns#adr> ?s.
        ?s ?p ?o. }';
    $options = array();
    $options["default_subject"] = $resourceuri;
    $stmtArray = constuctStmtArray($model,$query,$options);
    //print_r($stmtArray);
    $stmtArray[$resourceuri]["http://purl.org/dc/terms/publisher"] = array(array(
        'type'  => 'uri',
        'value' => $usruri
    ));
    $stmtArray[$resourceuri]["http://purl.org/procurement/public-contracts#publicationDate"] = array(array(
        'type'  => 'literal', 'datatype' => $xsdp.'date',
        'value' => Date("Y-m-d") 
    ));
    //print_r($stmtArray);
    $store->addMultipleStatements($publicmodel->getModelIri(), $stmtArray, false)
    $cache = $erfurt->getQueryCache();
    $cache->invalidateWithModelIri($publicmodel->getModelIri());
    printMessage("Business entity successfully published.",OntoWiki_Message::SUCCESS);
    //printMessage("Unable to publish.",OntoWiki_Message::ERROR);

