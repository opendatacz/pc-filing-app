<?php
    $templateData = loadData();
    $ow = OntoWiki::getInstance();
    $user = $ow->getUser();
    $store = $ow->erfurt->getStore();
        
    $basePath = $GLOBALS["cBasePath"];
    require_once("$basePath/lib/edit.lib.php");

    $username = $user->getUsername();
    $psuri = getPrivateSpace($ow);
    if ($psuri === false) throw new OntoWiki_Exception("User has no private space.");
    $modeluri = $psuri[0];
    $model = $store->getModel($modeluri);
    if (!isset($_REQUEST["uri"])) throw new OntoWiki_Exception("No resource selected.");//TODO: check type
    $xsdp = $model->getNamespacePrefix('http://www.w3.org/2001/XMLSchema#');
    $beuri = $_REQUEST["uri"];
    $post = $_POST;
    
    if ($post) //melo by byt
    {
        $resm = new OntoWiki_Model_Resource($store,$model,$beuri);
        $vals = $resm->getValues();
        if (isset($vals[$model->getModelIri()]))
            $vals = $vals[$model->getModelIri()];
        else throw new OntoWiki_Exception("Unknown error.");
        //legal name
        literalEdit($store,$model,$beuri,$GLOBALS["ns_var"]["gr"]."legalName",
            $post["gr:legalName0"],$vals[$GLOBALS["ns_var"]["gr"]."legalName"][0]["content"]);
        //official number
        literalEdit($store,$model,$beuri,$GLOBALS["ns_var"]["br"]."officialNumber",
            $post["br:officialNumber0"],$vals[$GLOBALS["ns_var"]["br"]."officialNumber"][0]["content"]);
        
        $queryao = 'SELECT ?a ?o WHERE {
            <'.$beuri.'> <'.$GLOBALS["ns_var"]["br"].'contact> ?c .
            ?c <http://www.w3.org/2006/vcard/ns#adr> ?a . 
            ?c <http://www.w3.org/2006/vcard/ns#org> ?o .}';
        $aores = $model->sparqlQuery($queryao);
        $orguri = $aores[0]["o"]; $adruri = $aores[0]["a"];
        $resm = new OntoWiki_Model_Resource($store,$model,$orguri);
        $vals = $resm->getValues();
        if (isset($vals[$model->getModelIri()])) {
            $vals = $vals[$model->getModelIri()];
            //organization name - same as legal name above
            literalEdit($store,$model,$orguri,$GLOBALS["ns_var"]["vcard"]."organization-name",
                $post["gr:legalName0"],$vals[$GLOBALS["ns_var"]["vcard"]."organization-name"][0]["content"]);
        }
        $resm = new OntoWiki_Model_Resource($store,$model,$adruri);
        $vals = $resm->getValues();
        if (isset($vals[$model->getModelIri()])) {
            $vals = $vals[$model->getModelIri()];
            //street
            literalEdit($store,$model,$adruri,$GLOBALS["ns_var"]["vcard"]."street",
                $post["vcard:street0"],$vals[$GLOBALS["ns_var"]["vcard"]."street"][0]["content"]);
            //locality - city
            literalEdit($store,$model,$adruri,$GLOBALS["ns_var"]["vcard"]."locality",
                $post["vcard:locality0"],$vals[$GLOBALS["ns_var"]["vcard"]."locality"][0]["content"]);
            //postal code
            literalEdit($store,$model,$adruri,$GLOBALS["ns_var"]["vcard"]."postal-code",
                $post["vcard:postal-code0"],$vals[$GLOBALS["ns_var"]["vcard"]."postal-code"][0]["content"]);
            //country name
            literalEdit($store,$model,$adruri,$GLOBALS["ns_var"]["vcard"]."country-name",
                $post["vcard:country-name0"],$vals[$GLOBALS["ns_var"]["vcard"]."country-name"][0]["content"]);
        }
    }